<%- include("../../views/partials/user/header") %>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    

    <style>
 /* Cart Page Container */
.cart-container {
    background-color: #f8f9fa;
    padding: 60px 0;
}

/* Main Cart Section */
.cart-section {
    background: white;
    border-radius: 15px;
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
    padding: 30px;
    margin-bottom: 30px;
}

/* Cart Table */
.table-shopping-cart {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    margin-bottom: 30px;
}

.table_head th {
    background-color: #f8f9fa;
    padding: 15px;
    font-weight: 600;
    color: #2c3e50;
    text-transform: uppercase;
    font-size: 14px;
    letter-spacing: 0.5px;
    border-bottom: 2px solid #eee;
}

.table_row {
    transition: all 0.3s ease;
}

.table_row:hover {
    background-color: #f8f9fa;
}

.table_row td {
    padding: 20px 15px;
    vertical-align: middle;
    border-bottom: 1px solid #eee;
}

/* Product Image */
.how-itemcart1 {
    width: 90px;
    height: 90px;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
}

.how-itemcart1 img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* Product Name */
.product-name {
    font-weight: 500;
    color: #2c3e50;
    font-size: 15px;
}

/* Quantity Controls */
.wrap-num-product {
    display: inline-flex;
    align-items: center;
    border: 1px solid #e1e8ee;
    border-radius: 25px;
    overflow: hidden;
    background: white;
}

.btn-num-product-down,
.btn-num-product-up {
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: #2c3e50;
    transition: all 0.2s ease;
}

.btn-num-product-down:hover,
.btn-num-product-up:hover {
    background-color: #2c3e50;
    color: white;
}

.num-product {
    width: 50px;
    border: none;
    text-align: center;
    font-weight: 500;
    background: transparent;
}

/* Remove Button */
.btn-remove-item {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    border: 1px solid #e1e8ee;
    background: white;
    color: #dc3545;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

.btn-remove-item:hover {
    background: #dc3545;
    color: white;
    border-color: #dc3545;
}

/* Coupon Section */
.coupon-section {
    background: white;
    padding: 20px;
    border-radius: 10px;
    border: 1px solid #e1e8ee;
    display: flex;
    gap: 15px;
    margin-top: 30px;
}

.coupon-input {
    flex: 1;
    padding: 12px 20px;
    border: 1px solid #e1e8ee;
    border-radius: 25px;
    font-size: 14px;
}

.coupon-button {
    padding: 12px 30px;
    background: #2c3e50;
    color: white;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.coupon-button:hover {
    background: #34495e;
    transform: translateY(-2px);
}

/* Cart Totals Section */
.cart-totals {
    background: white;
    border-radius: 15px;
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
    padding: 30px;
}

.cart-totals h4 {
    font-size: 20px;
    color: #2c3e50;
    margin-bottom: 25px;
    padding-bottom: 15px;
    border-bottom: 2px solid #eee;
}

.total-row {
    display: flex;
    justify-content: space-between;
    padding: 15px 0;
    border-bottom: 1px solid #eee;
}

.total-label {
    color: #2c3e50;
    font-weight: 500;
}

.total-value {
    font-weight: 600;
    color: #2c3e50;
}

/* Checkout Button */
.checkout-button {
    width: 100%;
    padding: 15px;
    background: #4CAF50;
    color: white;
    border: none;
    border-radius: 25px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 30px;
}

.checkout-button:hover {
    background: #45a049;
    transform: translateY(-2px);
}

/* Responsive Design */
@media (max-width: 768px) {
    .cart-section,
    .cart-totals {
        padding: 20px;
        margin: 10px;
    }

    .table-shopping-cart {
        display: block;
        overflow-x: auto;
    }

    .coupon-section {
        flex-direction: column;
    }

    .how-itemcart1 {
        width: 70px;
        height: 70px;
    }
}
    </style>

    <!-- breadcrumb -->
    <div class="container">
        <div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
            <a href="/" class="stext-109 cl8 hov-cl1 trans-04">
                Home
                <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
            </a>
            <span class="stext-109 cl4">Shopping Cart</span>
        </div>
    </div>

    <div class="cart-container">
        <div class="container">
            <div class="row">
                <!-- Cart Items Section -->
                <div class="col-lg-8">
                    <div class="cart-section">
                        <table class="table-shopping-cart">
                            <thead>
                                <tr class="table_head">
                                    <th class="column-1">Product</th>
                                    <th class="column-2">Name</th>
                                    <th class="column-3">Price</th>
                                    <th class="column-4">Quantity</th>
                                    <th class="column-5">Total</th>
                                    <th class="column-6"></th>
                                </tr>
                            </thead>
                            <tbody id="cart-items">
                                <% if (cart && cart.items && cart.items.length > 0) { %>
                                    <% cart.items.forEach(function(item) { %>
                                        <tr class="table_row">
                                            <td class="column-1">
                                                <div class="how-itemcart1">
                                                    <img src="/uploads/<%= item.productId.productImage[0] %>" 
                                                         alt="<%= item.productId.productName %>">
                                                </div>
                                            </td>
                                            <td class="column-2">
                                                <span class="product-name"><%= item.productId.productName %></span>
                                            </td>
                                            <td class="column-3">Rs.<%= item.price %></td>
                                            <td class="text-center" data-title="Quantity">
                                                <% if(item.productId.quantity != 0) {%>
                                                <div class="quantity-control">
                                                    <button type="button"
                                                        onclick="updateQuantity('<%= item.productId._id %>', -1,'<%= item.productId.quantity %>')"
                                                        class="btn-quantity">-</button>
                                                    <span id="quantity-<%= item.productId._id %>"
                                                        class="quantity-display">
                                                        <%= item.quantity %>
                                                    </span>
                                                    <button type="button"
                                                        onclick="updateQuantity('<%= item.productId._id %>', 1,'<%= item.productId.quantity %>')"
                                                        class="btn-quantity">+</button>
                                                </div>
                                            <% }else{%>
                                                <span 
                                                    class="text-danger">
                                                    out of stock
                                                </span>
                                            <% } %>

                                            </td>
                                            
                                            <td class="column-5">
                                                Rs.<span class="item-total"><%= item.price * item.quantity %></span>
                                            </td>
                                            <td class="column-6">
                                                <button class="btn-remove-item" onclick="removeItem('<%= item.productId._id %>')">
                                                    <i class="fa-solid fa-x"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="6" class="text-center">Your cart is empty</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
    
                        <!-- Coupon Section -->
                        <div class="coupon-section">
                            <input type="text" class="coupon-input" id="coupon-code" 
                                   placeholder="Enter coupon code">
                            <button class="coupon-button" onclick="applyCoupon()">
                                Apply Coupon
                            </button>
                        </div>
                    </div>
                </div>
    
                <!-- Cart Totals Section -->
                <div class="col-lg-4">
                    <div class="cart-totals">
                        <h4>Cart Totals</h4>
                        
                        <div class="total-row">
                            <span class="total-label cart-subtotal">Subtotal</span>
                            <span class="total-value">Rs.<span id="cart-subtotal">0</span></span>
                        </div>
                        
                        <div class="total-row">
                            <span class="total-label">Shipping</span>
                            <span class="total-value">Free</span>
                        </div>
                        
                        <div class="total-row">
                            <span class="total-label cart-total">Total</span>
                            <span class="total-value">Rs.<span id="cart-total">0</span></span>
                        </div>
    
                        <button class="checkout-button" onclick="proceedToCheckout()">
                            Proceed to Checkout
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            updateCartTotals();
            setupQuantityButtons();
        });


        // Function to remove an item from the cart
        function removeItem(productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to remove this item?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, remove it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/removeitem', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId }),
            })
                .then((response) => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        throw new Error('Failed to remove item');
                    }
                })
                .then((data) => {
                    if (data.success) {
                        const productRow = document.querySelector(`[data-product-id="${productId}"]`);
                        if (productRow) {
                            productRow.remove();
                        }

                        Swal.fire({
                            title: 'Removed!',
                            text: 'Item removed successfully!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(()=>{
                            window.location.reload()
                        })
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: data.message || 'Failed to remove item.',
                            icon: 'error',
                            confirmButtonText: 'Retry'
                        });
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Oops!',
                        text: 'Failed to remove item. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'Close'
                    });
                });
        }
    });
}


// cart total products sum

document.addEventListener('DOMContentLoaded', function () {
    updateCartTotals();
    setupQuantityButtons();
});


function updateCartTotals() {
    const cartItems = document.querySelectorAll('.table_row');
    let subtotal = 0;

    cartItems.forEach(row => {
        const itemTotalElement = row.querySelector('.item-total'); 
        if (itemTotalElement) {
            const itemTotal = parseFloat(itemTotalElement.textContent) || 0;
            subtotal += itemTotal;
        }
    });


    document.getElementById('cart-subtotal').textContent = subtotal.toFixed(2);
    document.getElementById('cart-total').textContent = subtotal.toFixed(2);
}


     

function updateQuantity(productId, change, availableQuantity) {
    const quantityElement = document.getElementById(`quantity-${productId}`);
    const currentQuantity = parseInt(quantityElement.textContent);
    const maxQuantity = Math.min(availableQuantity, 5);

    if (currentQuantity + change < 1) {
        Swal.fire({ icon: "warning", title: "Minimum Quantity Reached", text: "The minimum quantity is 1." });
        return;
    } else if (currentQuantity + change > maxQuantity) {
        Swal.fire({ icon: "warning", title: "Maximum Quantity Reached" });
        return;
    }

    fetch("/updateQuantity", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ productId, change }),
    })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                quantityElement.textContent = data.newQuantity;
                updateCartTotals();
            } else {
                Swal.fire({ icon: "error", title: "Error", text: data.message });
            }
        })
        .catch(error => console.error("Error updating quantity:", error));
}



       
    </script>



    <%- include("../../views/partials/user/footer") %>