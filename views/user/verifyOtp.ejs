<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Include SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <title>OTP Verification</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        .container {
            background-color: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        h1 {
            color: #333;
            margin-bottom: 1rem;
        }

        p {
            color: #666;
            margin-bottom: 2rem;
        }

        .otp-inputs {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-bottom: 2rem;
        }

        .otp-inputs input {
            width: 3rem;
            height: 3rem;
            font-size: 1.5rem;
            text-align: center;
            border: 2px solid #ddd;
            border-radius: 4px;
            outline: none;
            transition: border-color 0.3s;
        }

        .otp-inputs input:focus {
            border-color: #007bff;
        }

        button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #0056b3;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>OTP Verification</h1>
        <p>Enter the 6-digit code sent to your device</p>
        <form>
            <div class="otp-inputs">
                <input type="text" maxlength="1" pattern="[0-9]" inputmode="numeric" required>
                <input type="text" maxlength="1" pattern="[0-9]" inputmode="numeric" required>
                <input type="text" maxlength="1" pattern="[0-9]" inputmode="numeric" required>
                <input type="text" maxlength="1" pattern="[0-9]" inputmode="numeric" required>
                <input type="text" maxlength="1" pattern="[0-9]" inputmode="numeric" required>
                <input type="text" maxlength="1" pattern="[0-9]" inputmode="numeric" required>
            </div>
            <button type="submit">Verify</button>

            <button id="resend-otp" disabled>Resend OTP</button>
            <p id="timer">You can resend OTP in <span id="countdown">60</span> seconds.</p>
        </form>
    </div>
    <script>
        document.querySelector('form').addEventListener('submit', async (event) => {
            event.preventDefault();

            // Collect the OTP from all input fields
            const otpInputs = document.querySelectorAll('.otp-inputs input');
            const otp = Array.from(otpInputs).map(input => input.value).join('');
            console.log('otp is ', otp)
            // Ensure OTP is 6 digits
            if (otp.length !== 6) {
                Swal.fire('Please enter a 6-digit OTP.');
                return;
            }

            try {
                const response = await fetch('/verifyOtp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ otp }),
                });

                const result = await response.json();
                if (result.success) {
                    // Redirect on success
                    Swal.fire('otp is successfully')
                    setTimeout(() => {
                        window.location.href = result.redirectUrl;
                    }, 2000)


                } else {
                    // Show error message
                    Swal.fire(result.message || 'OTP verification failed.');
                }
            } catch (error) {
                console.error('Error during OTP verification:', error);
                Swal.fire('An unexpected error occurred. Please try again.');
            }
        });
    </script>
    <script>
        const inputs = document.querySelectorAll('.otp-inputs input');
        inputs.forEach((input, index) => {
            input.addEventListener('input', (event) => {
                const value = event.target.value;
                if (value.length > 1) {
                    event.target.value = value.charAt(0);
                }

                if (value && index < inputs.length - 1) {
                    inputs[index + 1].focus();
                }
            });

            input.addEventListener('keydown', (event) => {
                if (event.key === 'Backspace' && !event.target.value && index > 0) {
                    inputs[index - 1].focus();
                }
            });
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const resendButton = document.getElementById('resend-otp')
            const countDownPlay = document.getElementById('countdown')
            const timeText = document.getElementById("timer")
            let countdown


            function startTimer() {
                let timeLeft = 60
                countDownPlay.textContent = timeLeft
                resendButton.disabled = true
                timeText.style.display = 'block'

                countdown = setInterval(() => {
                    timeLeft -= 1
                    countDownPlay.textContent = timeLeft

                    if (timeLeft <= 0) {
                        clearInterval(countdown)
                        resendButton.disabled = false;
                        timeText.style.display = "none"
                    }

                }, 1000)

            }
            startTimer()

            resendButton.addEventListener("click", async () => {


                startTimer()
                try {
                    const response = await fetch('/resend-otp', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'OTP has been resent successfully.',
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: result.message || 'Failed to resend OTP. Please try again.',
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Network Error',
                        text: 'Could not connect to the server. Please try again later.',
                    });
                    console.error('Error resending OTP:', error);
                }



            })

        })
    </script>

</body>

</html>