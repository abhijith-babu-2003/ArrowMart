<style>
    :root {
        --primary-color: #6366f1;
        --primary-dark: #4f46e5;
        --secondary-color: #ec4899;
        --background-color: #f8fafc;
        --card-background: #ffffff;
        --text-primary: #1e293b;
        --text-secondary: #64748b;
        --border-color: #e2e8f0;
        --success-color: #22c55e;
        --warning-color: #eab308;
        --danger-color: #ef4444;
    }

    body {
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        background-color: var(--background-color);
        margin: 0;
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 2rem 0;
        color: var(--text-primary);
    }

    .container {
        display: flex;
        width: 95%;
        max-width: 1400px;
        background: linear-gradient(145deg, #ffffff, #f8fafc);
        border-radius: 20px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
            0 2px 4px -1px rgba(0, 0, 0, 0.06);
        overflow: hidden;
        position: relative;
    }

    .sidebar {
        width: 280px;
        background: linear-gradient(180deg, var(--primary-color), var(--primary-dark));
        padding: 2rem;
        color: white;
    }

    .sidebar a {
        display: flex;
        align-items: center;
        color: rgba(255, 255, 255, 0.8);
        text-decoration: none;
        margin-bottom: 1rem;
        font-weight: 500;
        transition: all 0.2s ease;
        border-radius: 12px;
        padding: 1rem 1.25rem;
        background: rgba(255, 255, 255, 0.1);
    }

    .sidebar a i {
        margin-right: 1rem;
        font-size: 1.25rem;
        opacity: 0.9;
    }

    .sidebar a:hover,
    .sidebar a.active {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        transform: translateX(5px);
    }

    .main-content {
        padding: 2.5rem;
        flex-grow: 1;
        background-color: var(--card-background);
    }

    .card {
        background: var(--card-background);
        border: none;
        border-radius: 16px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
        overflow: hidden;
    }

    .card:hover {
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        background: linear-gradient(to right, var(--primary-color), var(--primary-dark));
        color: white;
        padding: 1.5rem;
        border-bottom: none;
    }

    .card-header h5 {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 600;
    }

    .card-body {
        padding: 1.5rem;
    }

    .form-control {
        border: 2px solid var(--border-color);
        border-radius: 10px;
        padding: 0.75rem 1rem;
        transition: all 0.2s ease;
        font-size: 0.95rem;
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1);
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 10px;
        font-weight: 500;
        transition: all 0.2s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.875rem;
    }

    .btn-primary {
        background: linear-gradient(to right, var(--primary-color), var(--primary-dark));
        border: none;
        color: white;
    }

    .btn-primary:hover {
        background: linear-gradient(to right, var(--primary-dark), var(--primary-color));
        transform: translateY(-1px);
    }

    .btn-warning {
        background: linear-gradient(to right, var(--warning-color), #f59e0b);
        border: none;
        color: white;
    }

    .btn-warning:hover {
        background: linear-gradient(to right, #f59e0b, var(--warning-color));
    }

    .modal-content {
        background: var(--card-background);
        border-radius: 16px;
        border: none;
        box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    }

    .modal-header {
        background: linear-gradient(to right, var(--primary-color), var(--primary-dark));
        color: white;
        border-bottom: none;
        border-radius: 16px 16px 0 0;
        padding: 1.5rem;
    }

    .modal-body {
        padding: 2rem;
    }

    .modal-footer {
        border-top: 1px solid var(--border-color);
        padding: 1.5rem;
    }

    .form-label {
        color: var(--text-secondary);
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    /* Custom styles for user details */
    .user-details-list {
        list-style: none;
        padding: 0;
    }

    .user-details-list li {
        padding: 1rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .user-details-list li:last-child {
        border-bottom: none;
    }

    .user-details-label {
        color: var(--text-secondary);
        font-weight: 500;
    }

    .user-details-value {
        color: var(--text-primary);
        font-weight: 600;
    }

    @media (max-width: 768px) {
        .container {
            flex-direction: column;
            width: 100%;
            border-radius: 0;
        }

        .sidebar {
            width: 100%;
            padding: 1rem;
        }

        .main-content {
            padding: 1.5rem;
        }

        .card {
            margin: 1rem 0;
        }
    }
</style>




<div class="container">
    <!-- Sidebar -->
    <div class="sidebar">
        <ul class="nav flex-column" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab"
                    aria-controls="dashboard" aria-selected="false"><i class="fi-rs-settings-sliders mr-10"></i>My
                    profile</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab"
                    aria-controls="address" aria-selected="true"><i class="fi-rs-marker mr-10"></i>My Address</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" href="/logout"><i class="fi-rs-sign-out mr-10"></i>Logout</a>
            </li>
        </ul>
    </div>

    <!-- user details  -->
    <div class="main-content">
        <div class="tab-content dashboard-content">
            <div class="tab-pane fade active show" id="dashboard" role="tabpanel">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Hello, <span id="user-name">
                                <%= user.username %>
                            </span>!</h5>
                        <button class="btn btn-primary btn-sm" id="edit-user-details" data-bs-toggle="modal"
                            data-bs-target="#editUserModal">Edit</button>

                        <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header bg-primary text-white">
                                        <h5 class="modal-title" id="editUserModalLabel">Edit User Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form id="edit-user-form">
                                            <!-- Hidden field for user ID -->
                                            <input type="hidden" id="user-id" value="<%= user._id %>">

                                            <div class="mb-3">
                                                <label for="username" class="form-label">Name</label>
                                                <input type="text" class="form-control" id="username" name="username"
                                                    value="<%= user.username %>">
                                            </div>
                                            <div class="mb-3">
                                                <label for="email" class="form-label">Email</label>
                                                <input type="email" class="form-control" id="email" name="email"
                                                    value="<%= user.email %>">
                                            </div>
                                            <div class="mb-3">
                                                <label for="phone" class="form-label">Phone Number</label>
                                                <input type="text" class="form-control" id="phone" name="phone"
                                                    value="<%= user.phone %>">
                                            </div>
                                            <div class="text-end">
                                                <button type="submit" class="btn btn-success">Save Changes</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                    <div class="card-body">
                        <hr>
                        <h6>Your Details:</h6>
                        <ul>
                            <li><strong>Name:</strong> <span id="user-full-name">
                                    <%= user.username %>
                                </span></li>
                            <li><strong>Email:</strong> <span id="user-email">
                                    <%= user.email %>
                                </span></li>
                            <li><strong>Phone Number:</strong> <span id="user-phone">
                                    <%= user.phone %>
                                </span></li>
                        </ul>
                    </div>
                </div>

                <!-- Change Password Section -->
                <!-- Change Password Modal -->
                <div class="modal fade" id="changePasswordModal" tabindex="-1"
                    aria-labelledby="changePasswordModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="change-password-form">
                                    <div class="mb-3">
                                        <label for="current-password" class="form-label">Current Password</label>
                                        <input type="password" class="form-control" id="current-password"
                                            name="current-password">
                                        <span id="current-password-error" class="error-message text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label for="new-password" class="form-label">New Password</label>
                                        <input type="password" class="form-control" id="new-password"
                                            name="new-password">
                                        <span id="new-password-error" class="error-message text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label for="confirm-password" class="form-label">Confirm New
                                            Password</label>
                                        <input type="password" class="form-control" id="confirm-password"
                                            name="confirm-password">
                                        <span id="confirm-password-error" class="error-message text-danger"></span>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Change Password</button>
                                </form>
                            </div>
                        </div>
                    </div>


                </div>

                <!-- Button to trigger the modal -->
                <button type="button" class="btn btn-secondary btn-sm" data-bs-toggle="modal"
                    data-bs-target="#changePasswordModal">
                    Change Password
                </button>
            </div>

            <!-------oders -------------->

            <!-----------address ------------------->
            <div class="tab-pane fade" id="address" role="tabpanel" aria-labelledby="address-tab">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <a href="#" class="btn btn-sm btn-primary" data-bs-toggle="modal"
                        data-bs-target="#addAddressModal">Add New Address</a>
                </div>
                <div class="row">
                    <% if (userAddress && userAddress.address.length> 0) { %>
                        <% userAddress.address.forEach((address,i)=> { %>
                            <div class="col-lg-6">
                                <div class="col-lg-6">
                                    <div class="card mb-3 shadow-sm border-0">
                                        <div class="card-body">
                                            <h5 class="card-title text-primary">
                                                <%= address.addressType %>
                                            </h5>
                                            <p class="card-text">
                                                <strong>Name:</strong>
                                                <%= address.name %><br>
                                                    <strong>City:</strong>
                                                    <%= address.city %><br>
                                                        <strong>Landmark:</strong>
                                                        <%= address.landMark %><br>
                                                            <strong>State:</strong>
                                                            <%= address.state %><br>
                                                                <strong>Pincode:</strong>
                                                                <%= address.pincode %><br>
                                                                    <strong>Phone:</strong>
                                                                    <%= address.phone %><br>
                                                                        <strong>Alternate Phone:</strong>
                                                                        <%= address.altPhone %>
                                            </p>
                                            <div class="d-flex justify-content-start">
                                                <button type="button" class="btn btn-sm btn-warning me-2"
                                                    data-bs-toggle="modal" data-bs-target="#editAddressModal"
                                                    data-id="<%= address._id %>" data-type="<%= address.addressType %>"
                                                    data-name="<%= address.name %>" data-city="<%= address.city %> "
                                                    data-landmark="<%= address.landMark %> "
                                                    data-state="<%= address.state %> "
                                                    data-pincode="<%= address.pincode %> "
                                                    data-phone="<%= address.phone %> "
                                                    data-altphone="<%= address.altPhone %> ">
                                                    Edit
                                                </button>
                                                <a href="javascript:void(0);" class="btn btn-sm btn-danger"
                                                    onclick="deleteAddress('<%= address._id %>')">Delete</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <% }) %>
                                <% } else { %>
                                    <div class="col-12">
                                        <p class="text-muted">No addresses found. Please add a new address.</p>
                                    </div>
                                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addressForm">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="address_type" class="form-label">Address Type</label>
                            <select class="form-control" id="address_type" name="addressType">
                                <option value="Home">Home</option>
                                <option value="Work">Work</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>

                        <div class="col-md-6">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="name" name="name">
                        </div>
                        <div class="col-md-6">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control" id="city" name="city">
                        </div>
                        <div class="col-md-6">
                            <label for="landMark" class="form-label">Landmark</label>
                            <input type="text" class="form-control" id="landMark" name="landMark">
                        </div>
                        <div class="col-md-6">
                            <label for="state" class="form-label">State</label>
                            <select class="form-control" id="state" name="state">
                                <option value="">Select State</option>
                                <option value="Kerala">Kerala</option>
                                <option value="Tamil Nadu">Tamil Nadu</option>
                                <option value="Karnataka">Karnataka</option>
                                <option value="Maharashtra">Maharashtra</option>
                                <option value="Goa">Goa</option>
                                <option value="Delhi">Delhi</option>
                                <option value="Uttar Pradesh">Uttar Pradesh</option>
                                <option value="West Bengal">West Bengal</option>
                                <option value="Gujarat">Gujarat</option>
                                <option value="Rajasthan">Rajasthan</option>
                                <!-- Add more states as needed -->
                            </select>
                        </div>

                        <div class="col-md-6">
                            <label for="pincode" class="form-label">Pincode</label>
                            <input type="number" class="form-control" id="pincode" name="pincode">
                        </div>
                        <div class="col-md-6">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="text" class="form-control" id="phone" name="phone">
                        </div>
                        <div class="col-md-6">
                            <label for="altPhone" class="form-label">Alternate Phone</label>
                            <input type="text" class="form-control" id="altPhone" name="altPhone">
                        </div>
                    </div>
                    <div class="mt-3 text-end">
                        <button type="submit" class="btn btn-primary">Save Address</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Address Modal -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editAddressForm">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <input type="hidden" id="edit_address_id" name="addressId">
                            <label for="edit_address_type" class="form-label">Address Type</label>
                            <select class="form-control" id="edit_address_type" name="addressType">
                                <option value="Home">Home</option>
                                <option value="Work">Work</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>

                        <div class="col-md-6">
                            <label for="edit_name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="edit_name" name="name">
                        </div>
                        <div class="col-md-6">
                            <label for="edit_city" class="form-label">City</label>
                            <input type="text" class="form-control" id="edit_city" name="city">
                        </div>
                        <div class="col-md-6">
                            <label for="edit_landMark" class="form-label">Landmark</label>
                            <input type="text" class="form-control" id="edit_landMark" name="landMark">
                        </div>
                        <div class="col-md-6">
                            <label for="edit_state" class="form-label">State</label>
                            <select class="form-control" id="edit_state" name="state">
                                <option value="">Select State</option>
                                <option value="Kerala">Kerala</option>
                                <option value="Tamil Nadu">Tamil Nadu</option>
                                <option value="Karnataka">Karnataka</option>
                                <option value="Maharashtra">Maharashtra</option>
                                <option value="Goa">Goa</option>
                                <option value="Delhi">Delhi</option>
                                <option value="Uttar Pradesh">Uttar Pradesh</option>
                                <option value="West Bengal">West Bengal</option>
                                <option value="Gujarat">Gujarat</option>
                                <option value="Rajasthan">Rajasthan</option>
                            </select>
                        </div>

                        <div class="col-md-6">
                            <label for="edit_pincode" class="form-label">Pincode</label>
                            <input type="number" class="form-control" id="edit_pincode" name="pincode">
                        </div>
                        <div class="col-md-6">
                            <label for="edit_phone" class="form-label">Phone</label>
                            <input type="text" class="form-control" id="edit_phone" name="phone">
                        </div>
                        <div class="col-md-6">
                            <label for="edit_altPhone" class="form-label">Alternate Phone</label>
                            <input type="text" class="form-control" id="edit_altPhone" name="altPhone">
                        </div>
                    </div>
                    <div class="mt-3 text-end">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap JS (for modal functionality) -->



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>

document.addEventListener('DOMContentLoaded', function () {
    const editForm = document.getElementById('edit-user-form');
    const modalElement = document.getElementById('editUserModal');

    const validateUsername = username => /^[A-Za-z\s]+$/.test(username);
    const validateEmail = email => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    const validatePhone = phone => /^\d{10}$/.test(phone);

    editForm.addEventListener('submit', async function (event) {
        event.preventDefault();

        const userId = document.getElementById('user-id').value.trim();
        const username = document.getElementById('username').value.trim();
        const email = document.getElementById('email').value.trim();
        const phone = document.getElementById('phone').value.trim();

        // Check if any field is empty
        if (!userId || !username || !email || !phone) {
            Swal.fire('Invalid input', 'Please fill all the fields', 'error');
            return;
        }

        // Validate each field
        if (!validateUsername(username)) {
            Swal.fire('Invalid username', 'Only alphabets and spaces are allowed.', 'error');
            return;
        }

        if (!validateEmail(email)) {
            Swal.fire('Invalid email', 'Please enter a valid email address.', 'error');
            return;
        }

        if (!validatePhone(phone)) {
            Swal.fire('Invalid phone number', 'Please enter a valid 10-digit phone number.', 'error');
            return;
        }

        try {
            const response = await fetch(`/userdetails/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username, email, phone }),
            });

            const result = await response.json();

            if (response.ok) {
                // Update the UI dynamically
                document.getElementById('user-full-name').textContent = username;
                document.getElementById('user-email').textContent = email;
                document.getElementById('user-phone').textContent = phone;

                // Show a success message
                Swal.fire('Details updated successfully!', '', 'success');

                // Close the modal
                const modalInstance = bootstrap.Modal.getInstance(modalElement);
                modalInstance.hide();
            } else {
                Swal.fire(result.message || 'Failed to update user details', '', 'error');
            }
        } catch (error) {
            Swal.fire('An error occurred while updating the user details.', '', 'error');
        }
    });
});

    //change password
    document.getElementById("change-password-form").addEventListener("submit", async (e) => {
    e.preventDefault();

    // Clear all error messages
    document.querySelectorAll(".error-message").forEach((element) => {
        element.textContent = "";
    });

    // Get input values
    const currentPassword = document.getElementById("current-password").value.trim();
    const newPassword = document.getElementById("new-password").value.trim();
    const confirmPassword = document.getElementById("confirm-password").value.trim();

    let isValid = true;

    // Validate current password
    if (!currentPassword) {
        document.getElementById("current-password-error").textContent = "Current password is required.";
        isValid = false;
    } else if (typeof user !== "undefined" && user.password !== currentPassword) {
        // This assumes `user.password` exists and holds the correct password.
        document.getElementById("current-password-error").textContent = "Current password is incorrect.";
        isValid = false;
    }

    // Validate new password
    if (!newPassword) {
        document.getElementById("new-password-error").textContent = "New password is required.";
        isValid = false;
    } else if (newPassword.length < 6) {
        document.getElementById("new-password-error").textContent = "New password must be at least 6 characters long.";
        isValid = false;
    } else if (!/^[A-Za-z0-9]+$/.test(newPassword)) {
        document.getElementById("new-password-error").textContent =
            "New password must contain only letters and numbers.";
        isValid = false;
    }

    // Validate confirm password
    if (!confirmPassword) {
        document.getElementById("confirm-password-error").textContent = "Confirm password is required.";
        isValid = false;
    } else if (newPassword !== confirmPassword) {
        document.getElementById("confirm-password-error").textContent =
            "New password and confirm password do not match.";
        isValid = false;
    }

    // If validation fails, stop form submission
    if (!isValid) {
        return;
    }

    // Proceed with password change request
    try {
        const response = await fetch("/changePassword", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ currentPassword, newPassword }),
        });

        const result = await response.json();

        if (response.ok) {
            Swal.fire(result.message, "", "success");
            location.reload();
            document.getElementById("change-password-form").reset();

            // Close the modal
            const modal = bootstrap.Modal.getInstance(document.getElementById("changePasswordModal"));
            modal.hide();
        } else {
            Swal.fire(result.message, "", "error"); // Server-side error message
        }
    } catch (error) {
        console.error("Error changing password:", error);
        Swal.fire("Something went wrong. Please try again.", "", "error");
    }
});




    //address management

    document.getElementById("addressForm").addEventListener('submit', async (event) => {
        event.preventDefault()

        const addressType = document.getElementById('address_type');
        const name = document.getElementById('name');
        const city = document.getElementById('city');
        const landMark = document.getElementById('landMark');
        const state = document.getElementById('state');
        const pincode = document.getElementById('pincode');
        const phone = document.getElementById('phone');
        const altPhone = document.getElementById('altPhone');

        let isValid = true


        document.querySelectorAll('.error-message').forEach(el => el.remove())

        const showError = (field, message) => {
            const error = document.createElement("div")
            error.className = 'text-danger error-message';
            error.innerText = message;
            field.parentElement.appendChild(error);
            isValid = false;
        }
        if (!addressType.value.trim()) showError(addressType, 'Address Type is required.');
        if (!name.value.trim()) showError(name, 'Name is required.');
        if (!city.value.trim()) showError(city, 'City is required.');
        if (!landMark.value.trim()) showError(landMark, 'Landmark is required.');
        if (!state.value.trim()) showError(state, 'State is required.');
        if (!pincode.value || !/^\d{6}$/.test(pincode.value.trim())) showError(pincode, 'Pincode must be a 6-digit number.');
        if (!phone.value || !/^\d{10}$/.test(phone.value.trim())) showError(phone, 'Phone must be a 10-digit number.');
        if (!altPhone.value || !/^\d{10}$/.test(altPhone.value.trim())) showError(altPhone, 'Alternate Phone must be a 10-digit number.');

        if (isValid) {
            console.log('form is valid .submitting..');

            const formData = new FormData(event.target)

            const addressData = Object.fromEntries(formData.entries())

            try {
                const response = await fetch("/addAddress", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(addressData)

                })

                const result = await response.json()

                if (response.ok) {
                    Swal.fire(result.message)
                    location.reload()
                    document.getElementById("addressForm").reset()
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addAddressModal'));
                    modal.hide();
                } else {
                    Swal.fire(result.message)
                }
            } catch (error) {
                console.error("error adding address", error);
                Swal.fire("something went wrong .please try again")

            }
        }

    });

    //address edit management
    document.addEventListener("DOMContentLoaded", function () {
        const editAddressForm = document.getElementById("editAddressForm");

        editAddressForm.addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent default form submission

            const addressId = document.getElementById('edit_address_id').value;
            const addressType = document.getElementById('edit_address_type').value;
            const name = document.getElementById('edit_name').value;
            const city = document.getElementById('edit_city').value;
            const landMark = document.getElementById('edit_landMark').value;
            const state = document.getElementById('edit_state').value;
            const pincode = document.getElementById('edit_pincode').value;
            const phone = document.getElementById('edit_phone').value;
            const altPhone = document.getElementById('edit_altPhone').value;

            try {
                const response = await fetch(`/editAddress/${addressId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ addressType, name, city, landMark, state, pincode, phone, altPhone })
                });

                const result = await response.json();
                if (response.ok) {
                    Swal.fire(result.message); // Show success message
                    location.reload(); // Reload the page
                } else {
                    Swal.fire(result.message || "Failed to update details"); // Show error message
                }
            } catch (error) {
                console.error("Error", error);
                Swal.fire("An error occurred while updating the address");
            }
        });
    });



    document.addEventListener("DOMContentLoaded", function () {
        const editAddressModal = document.getElementById("editAddressModal");

        editAddressModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;

            // Extract data from data attributes
            const addressId = button.getAttribute('data-id');
            const addressType = button.getAttribute('data-type');
            const name = button.getAttribute('data-name');
            const city = button.getAttribute('data-city');
            const landMark = button.getAttribute('data-landmark');
            const state = button.getAttribute('data-state');
            const pincode = button.getAttribute('data-pincode');
            const phone = button.getAttribute('data-phone');
            const altPhone = button.getAttribute('data-altphone');

            // Populate modal fields with data
            document.getElementById('edit_address_id').value = addressId;
            document.getElementById('edit_address_type').value = addressType;
            document.getElementById('edit_name').value = name;
            document.getElementById('edit_city').value = city;
            document.getElementById('edit_landMark').value = landMark;
            document.getElementById('edit_state').value = state;
            document.getElementById('edit_pincode').value = pincode;
            document.getElementById('edit_phone').value = phone;
            document.getElementById('edit_altPhone').value = altPhone;
        });
    });

    async function deleteAddress(addressId) {
        if (confirm("Are you sure you want to delete this address?")) {
            try {
                const response = await fetch(`/deleteAddress/${addressId}`, {
                    method: 'DELETE'
                })

                if (response.ok) {
                    Swal.fire("Address deleted successfully")
                    window.location.href = "/userProfile"
                } else {
                    const result = await response.json()
                    Swal.fire(result.message)
                }
            } catch (error) {
                console.error("error deleting address", error);
                Swal.fire("An error occurred.Please try again")

            }
        }

    }




</script>