<%- include("../../views/partials/admin/header") %>

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
    .image-upload-box {
        border: 2px dashed #ccc;
        border-radius: 10px;
        height: 200px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .image-upload-box:hover {
        background-color: #f8f9fa;
    }

    .image-upload-box img {
        max-width: 100%;
        max-height: 180px;
        object-fit: contain;
    }

    .error-message {
        color: red;
        font-size: 0.85rem;
    }

    #imagePreviewModal .modal-dialog {
        max-width: 800px;
    }

    #imagePreviewModal .cropper-container {
        max-height: 500px;
    }
</style>

<div class="container-fluid">
    <section class="content-main">
        <div class="row">
            <div class="col-12">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="POST" action="/admin/addProducts" enctype="multipart/form-data" id="productForm">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name">
                                    <div id="productName-error" class="error-message"></div>
                                </div>
                                
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                              <div class="col-lg-4">
                                 <div class="mb-4">
                                     <label class="form-label">regular price</label>
                                     <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                     <div id="regularPrice-error" class="error-message"></div>
                                 </div>
                             </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Stock</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Color</label>
                                        <input name="color" type="text" class="form-control border">
                                        <div id="color-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" name="category">
                                                <% for(let i=0;i<cat.length;i++){%>
                                                    <option value="<%= cat[i].categoryName%>">
                                                        <%= cat[i].categoryName%>
                                                    </option>
                                                <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Product Images</h4>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <% for(let i=1; i<=4; i++) { %>
                                            <div class="col-md-3 mb-3">
                                                <div class="image-upload-box" id="imageBox<%= i %>" data-index="<%= i %>">
                                                    <img src="" alt="Preview" id="previewImage<%= i %>" style="display:none;">
                                                    <div class="text-center">
                                                        <i class="fas fa-cloud-upload-alt"></i>
                                                        <p>Choose Image</p>
                                                    </div>
                                                    <input type="file" name="images" id="imageInput<%= i %>" accept="image/*" style="display:none;">
                                                </div>
                                                <div id="imageError<%= i %>" class="error-message"></div>
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary" onclick="return validateForm()">Publish Product</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!-- Image Preview and Crop Modal -->
<div class="modal fade" id="imagePreviewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Crop and Preview Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-8">
                        <img id="cropperImage" src="" alt="Image to crop" style="max-width: 100%;">
                    </div>
                    <div class="col-md-4">
                        <div id="previewContainer">
                            <div class="preview"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveCroppedImage">Save Image</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script>
    let currentImageIndex = 0;
    let cropper;
    const validImageFormats = ["image/jpeg", "image/png", "image/jpg"];
    
    document.querySelectorAll('.image-upload-box').forEach(box => {
        box.addEventListener('click', function () {
            const input = this.querySelector('input[type="file"]');
            input.click();
        });
    
        const input = box.querySelector('input[type="file"]');
        input.addEventListener('change', function (event) {
            const file = event.target.files[0];
            currentImageIndex = this.closest('.image-upload-box').dataset.index;
            
            if (file) {
                if (!validImageFormats.includes(file.type)) {
                    displayErrorMessage(`imageError${currentImageIndex}`, 'Invalid image format. Please upload JPG or PNG.');
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imagePreviewModal = new bootstrap.Modal(document.getElementById('imagePreviewModal'));
                    const cropperImage = document.getElementById('cropperImage');
                    cropperImage.src = e.target.result;
    
                    if (cropper) cropper.destroy();
                    
                    imagePreviewModal.show();
                    setTimeout(() => {
                        cropper = new Cropper(cropperImage, {
                            aspectRatio: 1,
                            viewMode: 1,
                            preview: '.preview',
                        });
                    }, 500);
                };
                reader.readAsDataURL(file);
            }
        });
    });
    
    document.getElementById('saveCroppedImage').addEventListener('click', function () {
        const croppedCanvas = cropper.getCroppedCanvas();
        const previewImg = document.getElementById(`previewImage${currentImageIndex}`);
        const imageBox = document.getElementById(`imageBox${currentImageIndex}`);
        const imageInput = document.getElementById(`imageInput${currentImageIndex}`);
    
        previewImg.src = croppedCanvas.toDataURL('image/jpeg');
        previewImg.style.display = 'block';
        imageBox.querySelector('div.text-center').style.display = 'none';
    
        croppedCanvas.toBlob(blob => {
            const file = new File([blob], `cropped-image-${currentImageIndex}.jpg, { type: 'image/jpeg' }`);
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            imageInput.files = dataTransfer.files;
        });
    
        const imagePreviewModal = bootstrap.Modal.getInstance(document.getElementById('imagePreviewModal'));
        imagePreviewModal.hide();
        cropper.destroy();
    });
    



    
    function validateForm() {
    clearErrorMessages();
    let isValid = true;
    const productName = document.getElementsByName('productName')[0].value.trim();
    if (!productName) {
        displayErrorMessage('productName-error', 'Product name is required.');
        isValid = false;
    } else if (productName.length < 3 || productName.length > 100) {
        displayErrorMessage('productName-error', 'Product name must be between 3 and 100 characters.');
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s\-&()]+$/.test(productName)) {
        displayErrorMessage('productName-error', 'Product name can only contain letters, numbers, spaces, and special characters like -&().');
        isValid = false;
    }
    const description = document.getElementById('descriptionid').value.trim();
    if (!description) {
        displayErrorMessage('description-error', 'Product description is required.');
        isValid = false;
    } else if (description.length < 10 || description.length > 1000) {
        displayErrorMessage('description-error', 'Description must be between 10 and 1000 characters.');
        isValid = false;
    }
    const salePrice = document.getElementsByName('salePrice')[0].value.trim();
    if (!salePrice) {
        displayErrorMessage('salePrice-error', 'Sale price is required.');
        isValid = false;
    } else {
        const price = parseFloat(salePrice);
        if (isNaN(price) || price < 0 ) {
            displayErrorMessage('salePrice-error', 'Please enter a valid non-negative number.');
            isValid = false;
        } else if (!/^\d+(\.\d{1,2})?$/.test(salePrice)) {
            displayErrorMessage('salePrice-error', 'Price must have up to 2 decimal places.');
            isValid = false;
        }
    }
    const quantity = document.getElementsByName('quantity')[0].value.trim();
    if (!quantity) {
        displayErrorMessage('quantity-error', 'Stock quantity is required.');
        isValid = false;
    } else {
        const qty = parseInt(quantity);
        if (isNaN(qty) || qty < 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid non-negative number.');
            isValid = false;
        }
    }
    const color = document.getElementsByName('color')[0].value.trim();
    if (!color) {
        displayErrorMessage('color-error', 'Color is required.');
        isValid = false;
    } else if (color.length < 2 || color.length > 50) {
        displayErrorMessage('color-error', 'Color must be between 2 and 50 characters.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(color)) {
        displayErrorMessage('color-error', 'Color should contain only alphabetic characters.');
        isValid = false;
    }
    const brand = document.getElementsByName('brand')[0].value.trim();
    if (!brand) {
        displayErrorMessage('brand-error', 'Please select a brand.');
        isValid = false;
    }

    const category = document.getElementsByName('category')[0].value.trim();
    if (!category) {
        displayErrorMessage('category-error', 'Please select a category.');
        isValid = false;
    }
    const images = document.querySelectorAll('input[name="images"]');
    const validImageFormats = ["image/jpeg", "image/png", "image/jpg"];
    let imageSelected = false;

    images.forEach((input, index) => {
        if (input.files.length > 0) {
            imageSelected = true;
            const file = input.files[0];
            if (!validImageFormats.includes(file.type)) {
                displayErrorMessage(`imageError${index + 1}`, 'Invalid image format. Only JPG and PNG are allowed.');
                isValid = false;
            }
            if (file.size > 5 * 1024 * 1024) {
                displayErrorMessage(`imageError${index + 1}`, 'Image size must be less than 5MB.');
                isValid = false;
            }
        }
    });

    if (!imageSelected) {
        displayErrorMessage('imageError1', 'Please upload at least one product image.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    document.querySelectorAll('.error-message').forEach(el => {
        el.innerText = '';
        el.style.display = 'none';
    });
}
    </script>
    
    

<%- include("../../views/partials/admin/footer") %>