<%- include("../../views/partials/admin/header") %>
<style>
 .col-md-3 {
   padding: 20px;
   border: 1px solid #ddd;
   border-radius: 10px;
   margin: 10px;
 }


 .error-message {
   color: red;
   margin-top: 5px;
 }


 .form-label {
   margin-bottom: 8px;
 }


 .form-control {
   width: 100%;
   padding: 8px;
   margin-bottom: 10px;
   border: 1px solid #ccc;
   border-radius: 5px;
   box-sizing: border-box;
 }


 .d-grid {
   margin-top: 20px;
 }


 .btn-primary {
   background-color: #007bff;
   color: #fff;
   border: 1px solid #007bff;
   border-radius: 5px;
   padding: 10px 20px;
   cursor: pointer;
 }


 .btn-primary:hover {
   background-color: #0056b3;
   border-color: #0056b3;
 }
</style>


<section class="content-main">
 <div class="content-header">
   <div>
     <h2 class="content-title card-title">Coupons-Edit</h2>
   </div>
 </div>
 <div class="card">
   <div class="card-body">
     <div class="row">
       <div class="col-md-3">
         <form id="coupon-form" method="post" action="/admin/updatecoupon">
           <body onload="setDefaultStartDate(),setDefaultendDate()"></body>
           <input type="hidden" id="coupon-id" value="<%=coupon._id %>" />
           <div class="mb-4">
             <label for="coupon-name" class="form-label">Coupon Name</label>
             <input
               type="text"
               id="coupon-name"
               value="<%=coupon.name%>"
               name="couponName"
               placeholder="Type here"
               class="form-control"
             />
             <div id="error-coupon-name" class="error-message"></div>
           </div>


           <div>
             <label for="startingDate" class="form-label">Start Date</label>
             <input
               type="date"
               name="startDate"
               class="form-control"
               required="true"
               id="startingDate"
             />
             <div id="error-start-date" class="error-message"></div>
           </div>


           <div>
             <label for="expiringDate" class="form-label">End Date</label>
             <input
               type="date"
               name="endDate"
               class="form-control"
               id="expiringDate"
               required="true"
             />
             <div id="error-end-date" class="error-message"></div>
           </div>


           <div>
             <label for="offer-price" class="form-label">Offer Price</label>
             <input
               type="text"
               id="offer-price"
               name="offerPrice"
               placeholder="Type here"
               class="form-control"
               value="<%=coupon.offerPrice%>"
             />
             <div id="error-offer-price" class="error-message"></div>
           </div>


           <div>
             <label for="minimum-price" class="form-label">Minimum Price</label>
             <input
               type="text"
               name="minimumPrice"
               id="minimum-price"
               placeholder="Type here"
               class="form-control"
               value="<%=coupon.minimumPrice%>"
             />
             <div id="error-minimum-price" class="error-message"></div>
           </div>
           <div class="d-grid">
             <button " type="submit" class="btn btn-primary mt-20">Update Coupon</button>
           </div>
           <div id="err-msg" class="error-message"></div>
         </form>
       </div>
     </div>
   </div>
 </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
 function setDefaultStartDate() {
   const today = new Date();
   const year = today.getFullYear();
   let month = (today.getMonth() + 1).toString().padStart(2, "0");
   let day = today.getDate().toString().padStart(2, "0");
   document.getElementById("startingDate").value = `${year}-${month}-${day}`;
 }


 function setDefaultendDate() {
   const today = new Date();
   const tomorrow = new Date(today);
   tomorrow.setDate(today.getDate() + 1);


   const year = tomorrow.getFullYear();
   let month = (tomorrow.getMonth() + 1).toString().padStart(2, "0");
   let day = tomorrow.getDate().toString().padStart(2, "0");
   document.getElementById("expiringDate").value = `${year}-${month}-${day}`;
 }


 document.getElementById("coupon-form").addEventListener("submit", function(event) {
   event.preventDefault();
   if (validateForm()) {
     updateCoupon();
   }
 });


 function validateForm() {
  // Clear previous error messages
  document.querySelectorAll(".error-message").forEach((element) => (element.innerHTML = ""));

  // Validate dates
  const sDate = document.getElementsByName("startDate")[0].value;
  const eDate = document.getElementsByName("endDate")[0].value;
  
  if (!sDate) {
    document.getElementById("error-start-date").innerHTML = "Start date is required";
    return false;
  }
  
  if (!eDate) {
    document.getElementById("error-end-date").innerHTML = "End date is required";
    return false;
  }

  const sDateObj = new Date(sDate);
  const eDateObj = new Date(eDate);
  const todayDateObj = new Date();
  todayDateObj.setHours(0, 0, 0, 0);

  if (sDateObj > eDateObj) {
    document.getElementById("error-end-date").innerHTML = "End date should be after the start date";
    return false;
  }

  if (sDateObj <= todayDateObj) {
    document.getElementById("error-start-date").innerHTML = "Starting date should be greater than or equal to today's date";
    return false;
  }

  // Validate coupon name
  let name = document.getElementsByName("couponName")[0].value.trim();
  const nameRegex = /^[A-Za-z0-9]{1,50}$/;

  if (!name) {
    document.getElementById("error-coupon-name").innerHTML = "Coupon Name is required";
    return false;
  }

  if (!nameRegex.test(name)) {
    document.getElementById("error-coupon-name").innerHTML =
      "Coupon Name should only contain alphanumeric characters and be between 1 to 50 characters.";
    return false;
  }

  // Validate offer price and minimum price
  const offerPriceInput = document.getElementsByName("offerPrice")[0].value.trim();
  const minimumPriceInput = document.getElementsByName("minimumPrice")[0].value.trim();

  if (!offerPriceInput) {
    document.getElementById("error-offer-price").innerHTML = "Offer Price is required";
    return false;
  }

  if (!minimumPriceInput) {
    document.getElementById("error-minimum-price").innerHTML = "Minimum Price is required";
    return false;
  }

  const offerPrice = parseInt(offerPriceInput, 10);
  const minimumPrice = parseInt(minimumPriceInput, 10);

  if (isNaN(offerPrice)) {
    document.getElementById("error-offer-price").innerHTML =
      "Please enter a valid numeric value for Offer Price";
    return false;
  }

  if (isNaN(minimumPrice)) {
    document.getElementById("error-minimum-price").innerHTML = "Please enter a valid numeric value for Minimum Price";
    return false;
  }

  if (offerPrice < 0) {
    document.getElementById("error-offer-price").innerHTML = "Offer Price must be a positive number";
    return false;
  }

  if (minimumPrice < 0) {
    document.getElementById("error-minimum-price").innerHTML = "Minimum Price must be a positive number";
    return false;
  }

  if (offerPrice >= minimumPrice) {
    document.getElementById("error-offer-price").innerHTML = "Offer Price must be less than Minimum Price";
    return false;
  }

  return true;
}


 function updateCoupon() {
 $.ajax({
   url: "/admin/updatecoupon",
   method: "post",
   data: {
     couponId: document.getElementById("coupon-id").value,
     couponName: document.getElementById("coupon-name").value,
     startDate: document.getElementById("startingDate").value,
     endDate: document.getElementById("expiringDate").value,
     offerPrice: document.getElementById("offer-price").value,
     minimumPrice: document.getElementById("minimum-price").value,
   },
   success: function(response) {
     Swal.fire({
       icon: "success",
       title: "Success",
       text: "Coupon updated successfully!",
       confirmButtonText: "OK",
     }).then(() => {
       window.location.href = "/admin/coupon";
     });
   },
   error: function(xhr, status, error) {
     Swal.fire({
       icon: "error",
       title: "Error",
       text: "Failed to update the coupon. Please try again!",
       confirmButtonText: "OK",
     });
     console.error("Error updating coupon:", error);
   },
 });
}
</script>
<%- include("../../views/partials/admin/footer") %>


