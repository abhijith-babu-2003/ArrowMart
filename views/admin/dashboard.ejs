<%- include("../../views/partials/admin/header") %>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<section class="content-main">
    <div class="content-header mb-4">
        <div class="row">
            <div class="col-12">
                <h2 class="content-title display-6 mb-4">Dashboard Analytics</h2>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row g-4 mb-5">
        <div class="col-xl-3 col-md-6">
            <div class="stat-card bg-gradient-primary">
                <div class="stat-icon">
                    <i class="material-icons md-monetization_on"></i>
                </div>
                <div class="stat-content">
                    <p class="stat-label">Total Revenue</p>
                    <h3 class="stat-value">₹<%= Math.round(salesData?.totalSalesAmount || 0).toLocaleString('en-IN') %></h3>
                    <p class="stat-desc">All time sales revenue</p>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="stat-card bg-gradient-success">
                <div class="stat-icon">
                    <i class="material-icons md-shopping_cart"></i>
                </div>
                <div class="stat-content">
                    <p class="stat-label">Total Products</p>
                    <h3 class="stat-value"><%= totalProducts || 0 %></h3>
                    <p class="stat-desc">Active products</p>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="stat-card bg-gradient-info">
                <div class="stat-icon">
                    <i class="material-icons md-category"></i>
                </div>
                <div class="stat-content">
                    <p class="stat-label">Categories</p>
                    <h3 class="stat-value"><%= categories?.length || 0 %></h3>
                    <p class="stat-desc">Active categories</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Sales Chart -->
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">Revenue Analytics</h5>
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-outline-primary btn-sm" data-filter="daily">Daily</button>
                <button type="button" class="btn btn-outline-primary btn-sm" data-filter="weekly">Weekly</button>
                <button type="button" class="btn btn-outline-primary btn-sm" data-filter="monthly">Monthly</button>
                <button type="button" class="btn btn-outline-primary btn-sm" data-filter="yearly">Yearly</button>
            </div>
        </div>
        <div class="card-body">
            <div style="height: 380px; position: relative;">
                <div style="height: 380px;">
                    <canvas id="salesChart"></canvas>
                </div>
                <div id="chartLoading" class="position-absolute top-50 start-50 translate-middle d-none">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let salesChart = null;
            let categoryChart = null;
            const chartLoading = document.getElementById('chartLoading');
            const initialData = <%- JSON.stringify(salesData) %>;

            function showLoading() {
                if (chartLoading) chartLoading.classList.remove('d-none');
            }

            function hideLoading() {
                if (chartLoading) chartLoading.classList.add('d-none');
            }

            function createSalesChart(chartData) {
                const ctx = document.getElementById('salesChart').getContext('2d');
                
                if (salesChart) {
                    salesChart.destroy();
                }

                salesChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            label: 'Revenue',
                            data: chartData.data,
                            backgroundColor: '#6366f1',
                            borderRadius: 4,
                            maxBarThickness: 40,
                            borderWidth: 0
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false,
                                callbacks: {
                                    label: function(context) {
                                        return '₹' + context.parsed.y.toLocaleString();
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: {
                                    color: '#f1f5f9',
                                    drawBorder: false
                                },
                                ticks: {
                                    callback: value => '₹' + value.toLocaleString(),
                                    padding: 10
                                },
                                border: {
                                    display: false
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    padding: 10
                                },
                                border: {
                                    display: false
                                }
                            }
                        }
                    }
                });
            }

            function initCategoryChart() {
                const ctx = document.getElementById('categoryPieChart');
                if (!ctx) return;

                const categoryData = <%- JSON.stringify(categories) %>;
                if (!categoryData || !categoryData.length) return;

                if (categoryChart) {
                    categoryChart.destroy();
                }

                const colors = [
                    '#6366f1', '#10b981', '#3b82f6', '#f59e0b', 
                    '#ef4444', '#8b5cf6', '#ec4899', '#14b8a6'
                ];

                categoryChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: categoryData.map(cat => cat.name),
                        datasets: [{
                            data: categoryData.map(cat => cat.totalRevenue),
                            backgroundColor: categoryData.map((_, index) => colors[index % colors.length]),
                            borderWidth: 1,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 20,
                                    usePointStyle: true,
                                    font: {
                                        size: 12
                                    }
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        const value = context.raw;
                                        const percentage = categoryData[context.dataIndex].percentage;
                                        return `₹${Math.round(value).toLocaleString()} (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Handle filter clicks
            document.querySelectorAll('[data-filter]').forEach(button => {
                button.addEventListener('click', async function() {
                    const filter = this.dataset.filter;
                    
                    // Update button states
                    document.querySelectorAll('[data-filter]').forEach(btn => {
                        btn.classList.remove('btn-primary', 'active');
                        btn.classList.add('btn-outline-primary');
                    });
                    this.classList.remove('btn-outline-primary');
                    this.classList.add('btn-primary', 'active');

                    try {
                        showLoading();
                        const response = await fetch(`/admin/sales-data?filter=${filter}`);
                        if (!response.ok) throw new Error('Failed to fetch data');
                        const newData = await response.json();
                        createSalesChart(newData);
                    } catch (error) {
                        console.error('Error fetching sales data:', error);
                        alert('Failed to load sales data. Please try again.');
                    } finally {
                        hideLoading();
                    }
                });
            });

            // Initialize charts
            createSalesChart(initialData);
            initCategoryChart();

            // Handle window resize
            window.addEventListener('resize', function() {
                if (categoryChart) {
                    categoryChart.resize();
                }
            });
        });
    </script>

    <!-- Products and Categories -->
    <div class="row g-4">
        <div class="col-xl-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Top Selling Products</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Product Name</th>
                                    <th>Price</th>
                                    <th>Units Sold</th>
                                    <th>Revenue</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (products && products.length > 0) { %>
                                    <% products.forEach(product => { %>
                                        <tr>
                                            <td><%= product.name || 'N/A' %></td>
                                            <td>₹<%= (product.price || 0).toLocaleString() %></td>
                                            <td><%= product.totalQuantitySold || 0 %></td>
                                            <td>₹<%= (product.totalRevenue || 0).toLocaleString() %></td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="4" class="text-center">No products data available</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Category Distribution</h5>
                </div>
                <div class="card-body">
                    <div style="height: 300px; position: relative; margin-bottom: 20px;">
                        <canvas id="categoryPieChart"></canvas>
                    </div>
                    <div class="mt-4">
                        <% if (categories && categories.length > 0) { %>
                            <% categories.forEach(category => { %>
                                <div class="mb-3">
                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                        <span class="fw-medium"><%= category.name %></span>
                                        <div class="text-end">
                                            <div>₹<%= Math.round(category.totalRevenue).toLocaleString() %></div>
                                            <small class="text-muted">
                                                <%= category.totalQuantity %> items | <%= category.orderCount %> orders
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p class="text-center text-muted">No category data available</p>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .custom-card {
    border: none;
    border-radius: 16px;
    background: #fff;
    box-shadow: 0 0 20px rgba(0,0,0,0.05);
}

.stat-card {
    padding: 1.5rem;
    border-radius: 16px;
    color: white;
    height: 100%;
    position: relative;
    overflow: hidden;
}

.bg-gradient-primary {
    background: linear-gradient(45deg, #6366f1, #818cf8);
}

.bg-gradient-success {
    background: linear-gradient(45deg, #10b981, #34d399);
}

.bg-gradient-info {
    background: linear-gradient(45deg, #3b82f6, #60a5fa);
}

.stat-icon {
    position: absolute;
    right: -10px;
    top: 50%;
    transform: translateY(-50%);
    opacity: 0.2;
    font-size: 4rem;
}

.stat-content {
    position: relative;
    z-index: 1;
}

.stat-label {
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    opacity: 0.8;
}

.stat-value {
    font-size: 1.75rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
}

.stat-desc {
    font-size: 0.75rem;
    margin: 0;
    opacity: 0.7;
}

.progress {
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 10px;
}

.table > :not(caption) > * > * {
    padding: 1rem;
}

.form-select {
    border-color: #e2e8f0;
    padding: 0.375rem 2rem 0.375rem 0.75rem;
}

.form-select:focus {
    border-color: #818cf8;
    box-shadow: 0 0 0 0.2rem rgba(99, 102, 241, 0.25);
}

.btn-group .btn {
    padding: 0.375rem 1rem;
    font-size: 0.875rem;
}

.btn-group .btn:focus {
    box-shadow: none;
}

.btn-outline-primary {
    color: #6366f1;
    border-color: #6366f1;
}

.btn-outline-primary:hover {
    background-color: #6366f1;
    color: white;
}

.btn-primary {
    background-color: #6366f1;
    border-color: #6366f1;
}

.btn-primary:hover {
    background-color: #4f46e5;
    border-color: #4f46e5;
}

#chartLoading {
    background: rgba(255, 255, 255, 0.8);
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
}
</style>

<%- include("../../views/partials/admin/footer") %>